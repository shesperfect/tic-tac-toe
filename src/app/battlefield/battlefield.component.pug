article.page-wrapper.flex-column.flex-align_space-between_stretch
  section.game-container.flex-column.flex-align_space-between_stretch.flex-align-self_auto.fade-in
    header.header-bar.flex-row.flex-wrap.slide-top
      .blood-level.flex-40
        .blood-level__bar
        .blood-level__name {{ model.players[0].name }}
      .time-counter.flex-20.flex-align_center_center.title
        span Player {{ type + 1 }} turn
      .blood-level.flex-40
        .blood-level__bar
        .blood-level__name.text-right {{ model.players[1].name }}
      .victory-count.flex-100
        .victory-count__item.flex-50.flex-align_start_center
          img.player-image([src]="model.players[0].imgPath", width="48", height="59")
        .victory-count__item.flex-50.flex-align_end_center
          img.player-image([src]="model.players[1].imgPath", width="48", height="59")
    .flex.playground
      .church#level-wrapper
        .level-decor
          .level-sky
            .sky-decor
              .sky-decor-inner
            .clouds
              .cloud
          .level-floor-decor
          .level-floor
        .play-zone
        .screen-messages
          .title.fade-in#round-messages(*ngIf="!showMenu")
            span(*ngIf="hasWinner") {{ model.players[type].name }} won!
            span(*ngIf="isDraw") Tie!
      .battle-table(*ngIf="!hasWinner && !isDraw")
        .border
        .field
          ng-container(*ngFor="let i of model.size | numArray" )
            .cell(
              *ngFor="let j of model.size | numArray",
              [cell]="type",
              [style.width]="100 / model.size + '%'",
              (fill)="check(i, j, 0)")
    .start-screen-menu.flex-column.flex-align_center_center(*ngIf="showMenu")
      span.start-screen-menu__item.slide-top.menu-item((click)="reset()", appButton="") Revenge
      span.start-screen-menu__item.slide-top.menu-item(routerLink="/", appButton="") Home

